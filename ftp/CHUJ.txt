    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }


    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }
    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

    private void list(String input) {
        // send a list from the server to the passive DTP
        // args -> [<SP> <pathname>] <CRLF>
        String[] args = input.split(" ");
        if (args.length >= 2) {
            if (args.length == 2) {
                out.print("LIST " + args[1]);
            } else {
                StringBuilder data = new StringBuilder(" ");
                for (int i = 2; i < args.length; i++) {
                    if ((i == args.length - 1)) {
                        data.append(args[i]);
                    } else {
                        data.append(args[i]).append(" ");
                    }
                }
                out.print("LIST " + args[1] + data.toString());
            }
            Response(200);
        } else {
            Response(501);
        }
    }

